services:
  postgres_db:
    image: postgres:latest  # Usando el tag 'latest'
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ferrisariato_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1809
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen persistente para los datos
    networks:
      - mi_red_docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ferrisariato_app"]
      interval: 5s
      timeout: 2s
      retries: 20
  frontend:
    container_name: frontend_ferrisariato
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
      - /app/frontend/node_modules  # Aísla completamente node_modules
    environment:
      - NODE_ENV=development
    
  backend:
    container_name: backend_ferrisariato
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    tty: true
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    networks:
      - mi_red_docker

networks:
  mi_red_docker:
    driver: bridge  # ¡Sin 'external: true'!

volumes:
  postgres_data:  # Definir volumen persistente
