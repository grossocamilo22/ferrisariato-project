services:
  frontend:
    container_name: frontend_ferrisariato
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
      - /app/frontend/node_modules  # AÃ­sla completamente node_modules
    environment:
      - NODE_ENV=development
    command: bun run dev

  backend:
    container_name: backend_ferrisariato
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:1809@ecom:5432/ferrisariato_app
    depends_on:
      - frontend
    networks:
      - mi_red_docker

  postgres:
    container_name: ecom
    image: postgres:latest  # Usando el tag 'latest'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1809
      POSTGRES_DB: ferrisariato_app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen persistente para los datos
    networks:
      - mi_red_docker

networks:
  mi_red_docker:
    external: true  # Usa una red existente

volumes:
  postgres_data:  # Definir volumen persistente
